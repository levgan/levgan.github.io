{
  "version": 3,
  "sources": ["../node_modules/fork-me-github/src/index.js", "../node_modules/eventemitter3/index.js", "../node_modules/clicked/clicked.js", "../scripts/live.js", "code.js", "../src/tree.js", "../src/utils.js", "../src/indicator.js", "../src/input.js", "../src/defaults.js", "../src/icons.js"],
  "sourcesContent": ["// Programatically add fork me on github ribbon from javascript without making changes to CSS, HTML, or adding image files\n// by David Figatner\n// copyright 2018 YOPEY YOPEY LLC\n// MIT license\n// based on https://github.com/simonwhitaker/github-fork-ribbon-css (MIT license)\n\nconst RIBBON = {\n    width: '12.1em',\n    height: '12.1em',\n    overflow: 'hidden',\n    top: 0,\n    right: 0,\n    zIndex: 9999,\n    pointerEvents: 'none',\n    fontSize: '13px',\n    textDecoration: 'none',\n    textIndent: '-999999px'\n}\n\nconst BEFORE_AFTER = [\n    ['position', 'absolute'],\n    ['display', 'block'],\n    ['width', '15.38em'],\n    ['height', '1.54em'],\n    ['top', '3.23em'],\n    ['right', '-3.23em'],\n    ['-webkit-box-sizing', 'content-box'],\n    ['-moz-box-sizing', 'content-box'],\n    ['box-sizing', 'content-box'],\n    ['-webkit-transform', 'rotate(45deg)'],\n    ['-moz-transform', 'rotate(45deg)'],\n    ['-ms-Transform', 'rotate(45deg)'],\n    ['-o-transform', 'rotate(45deg)'],\n    ['transform', 'rotate(45deg)']\n]\n\nconst BEFORE = [\n    ['content', '\"\"'],\n    ['padding', '.38em 0'],\n    ['background-color', '#a00'],\n    ['background-image', '-webkit-gradient(linear, left top, left bottom, from(rgba(0, 0, 0, 0)), to(rgba(0, 0, 0, 0.15)))'],\n    ['background-image', '-webkit-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15))'],\n    ['background-image', '-moz-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15))'],\n    ['background-image', '-ms-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15))'],\n    ['background-image', '-o-linear-gradient(top, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15))'],\n    ['background-image', 'linear-gradient(to bottom, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.15))'],\n    ['box-shadow', '0 .15em .23em 0 rgba(0, 0, 0, 0.5)'],\n    ['pointer-events', 'auto']\n]\n\nconst AFTER = [\n    ['content', 'attr(data-ribbon)'],\n    ['color', '#fff'],\n    ['font', '700 1em \"Helvetica Neue\", Helvetica, Arial, sans-serif'],\n    ['line-height', '1.54em'],\n    ['text-decoration', 'none'],\n    ['text-shadow', '0 -.08em rgba(0, 0, 0, 0.5)'],\n    ['text-align', 'center'],\n    ['text-indent', '0'],\n    ['padding', '.15em 0'],\n    ['margin', '.15em 0'],\n    ['border-width', '.08em 0'],\n    ['border-style', 'dotted'],\n    ['border-color', '#fff'],\n    ['border-color', 'rgba(255, 255, 255, 0.7)']\n]\n\n/**\n * Programmatically add \"Fork me Github\" Ribbon using inline CSS\n * Based on CSS from https,//github.com/simonwhitaker/github-fork-ribbon-css\n * @param {string} [url] - do not need to include if URL is called from https://username.github.io/project/html\n * @param {object} [options]\n * @param {HTMLElement} [options.parent=document.body]\n * @param {boolean} [options.fixed]\n * @param {string} [options.corner=topright] some combination of top/bottom, and left/right\n * @param {string} [options.text=fork me on github] text to show\n * @param {string} [options.background=#a00] color for ribbon\n */\nexport default function forkMe(url, options)\n{\n    options = options || {}\n    const a = document.createElement('a')\n    if (url)\n    {\n        a.href = url\n    }\n    else\n    {\n        const username = window.location.hostname.split('.')[0]\n        const project = window.location.pathname.split('/')[1]\n        a.href = 'https://github.com/' + username + '/' + project\n    }\n\n    a.title = a.innerText = options.text || 'fork me on github'\n    a.setAttribute('data-ribbon', options.text || 'fork me on github')\n    a.className = 'github-fork-ribbon-' + Math.round(Math.random() * 100000)\n    if (options.parent)\n    {\n        options.parent.appendChild(a)\n    }\n    else\n    {\n        document.body.appendChild(a)\n    }\n    a.style.position = options.fixed ? 'fixed' : 'absolute'\n    if (options.background)\n    {\n        BEFORE[2][1] = options.background\n    }\n    if (options.color)\n    {\n        AFTER[1][1] = options.color\n    }\n    for (let style in RIBBON)\n    {\n        a.style[style] = RIBBON[style]\n    }\n    let beforeAfter = '{'\n    for (let style of BEFORE_AFTER)\n    {\n        beforeAfter += style[0] + ':' + style[1] + ';'\n    }\n    let before = beforeAfter\n    for (let style of BEFORE)\n    {\n        before += style[0] + ':' + style[1] + ';'\n    }\n    let after = beforeAfter\n    for (let style of AFTER)\n    {\n        after += style[0] + ':' + style[1] + ';'\n    }\n    let bottom, left\n    if (options.side)\n    {\n        bottom = options.side.toLowerCase().indexOf('bottom') !== -1\n        left = options.side.toLowerCase().indexOf('left') !== -1\n    }\n    if (bottom)\n    {\n        a.style.top = 'auto'\n        a.style.bottom = 0\n        before += 'top:auto;bottom:3.23em;'\n        after += 'top:auto;bottom:3.23em;'\n    }\n    if (left)\n    {\n        a.style.right = 'auto'\n        a.style.left = 0\n        before += 'right:auto;left:-3.23em;'\n        after += 'right:auto;left:-3.23em;'\n    }\n    if ((left && !bottom) || (!left && bottom))\n    {\n        before += 'transform:rotate(-45deg);'\n        after += 'transform:rotate(-45deg);'\n    }\n    const style = document.createElement('style')\n    document.head.appendChild(style)\n    const sheet = style.sheet\n    sheet.insertRule('.' + a.className + '::before' + before + '}')\n    sheet.insertRule('.' + a.className + '::after' + after + '}')\n}", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "/**\n * Javascript: create click event for both mouse and touch\n * @example\n *\n * const clicked = require('clicked')\n *\n * function handleClick()\n * {\n *    console.log('I was clicked.')\n * }\n *\n * const div = document.getElementById('clickme')\n * const c = clicked(div, handleClick, {thresshold: 15})\n *\n * // change callback\n * c.callback = () => console.log('different clicker')\n *\n */\n\n/**\n * @param {HTMLElement} element\n * @param {function} callback called after click: callback(event, options.args)\n * @param {object} [options]\n * @param {number} [options.thresshold=10] if touch moves threshhold-pixels then the touch-click is cancelled\n * @param {*} [options.args] arguments for callback function\n * @returns {Clicked}\n */\nfunction clicked(element, callback, options)\n{\n    return new Clicked(element, callback, options)\n}\n\nclass Clicked\n{\n    constructor(element, callback, options)\n    {\n        this.options = options || {}\n        this.threshhold = this.options.thresshold || 10\n        this.events = {\n            mouseclick: (e) => this.mouseclick(e),\n            touchstart: (e) => this.touchstart(e),\n            touchmove: (e) => this.touchmove(e),\n            touchcancel: (e) => this.touchcancel(e),\n            touchend: (e) => this.touchend(e)\n        }\n        element.addEventListener('click', this.events.mouseclick)\n        element.addEventListener('touchstart', this.events.touchstart, { passive: true })\n        element.addEventListener('touchmove', this.events.touchmove, { passive: true })\n        element.addEventListener('touchcancel', this.events.touchcancel)\n        element.addEventListener('touchend', this.events.touchend)\n        this.element = element\n        this.callback = callback\n    }\n\n    /**\n     * removes event listeners added by Clicked\n     */\n    destroy()\n    {\n        this.element.removeEventListener('click', this.events.mouseclick)\n        this.element.removeEventListener('touchstart', this.events.touchstart, { passive: true })\n        this.element.removeEventListener('touchmove', this.events.touchmove, { passive: true })\n        this.element.removeEventListener('touchcancel', this.events.touchcancel)\n        this.element.removeEventListener('touchend', this.events.touchend)\n    }\n\n    touchstart(e)\n    {\n        if (e.touches.length === 1)\n        {\n            this.lastX = e.changedTouches[0].screenX\n            this.lastY = e.changedTouches[0].screenY\n            this.down = true\n        }\n    }\n\n    pastThreshhold(x, y)\n    {\n        return Math.abs(this.lastX - x) > this.threshhold || Math.abs(this.lastY - y) > this.threshhold\n    }\n\n    touchmove(e)\n    {\n        if (!this.down || e.touches.length !== 1)\n        {\n            this.touchcancel()\n            return\n        }\n        var x = e.changedTouches[0].screenX\n        var y = e.changedTouches[0].screenY\n        if (this.pastThreshhold(x, y))\n        {\n            this.touchcancel()\n        }\n    }\n\n    touchcancel()\n    {\n        this.down = false\n    }\n\n    touchend(e)\n    {\n        if (this.down)\n        {\n            e.preventDefault()\n            this.callback(e, this.options.args)\n        }\n    }\n\n    mouseclick(e)\n    {\n        this.callback(e, this.options.args)\n    }\n}\n\nmodule.exports = clicked", "const port = 1235\r\nlet first = true\r\n\r\nfunction createSocket() {\r\n    const socket = new WebSocket(`ws://localhost:${port}`)\r\n    socket.addEventListener('message', () => window.location.reload())\r\n    socket.addEventListener('close', () => {\r\n        setTimeout(createSocket, 0)\r\n    })\r\n    socket.addEventListener('open', () => {\r\n        if (!first) {\r\n            window.location.reload()\r\n        } else {\r\n            first = false\r\n        }\r\n    })\r\n}\r\n\r\nwindow.addEventListener('load', () => {\r\n    createSocket()\r\n    console.log(`Live reload initialized on port ${port}...`)\r\n})", "import forkMe from 'fork-me-github'\n\nimport { Tree } from '../src/tree'\nimport * as utils from '../src/utils'\n\nconst data = {\n    children: [\n        { name: 'fruits', children: [\n            { name: 'apples', children: [] },\n            { name: 'oranges', children: [\n                { name: 'tangerines', children: [] },\n                { name: 'mandarins', children: [] },\n                { name: 'pomelo', children: [] },\n                { name: 'blood orange', children: [] },\n            ] }\n        ]},\n        { name: 'vegetables', children: [\n            { name: 'brocolli', children: [] },\n        ] },\n    ]\n}\n\nfunction test() {\n    const tree = new Tree(data, { parent: document.body })\n    tree.expandAll()\n}\n\nwindow.onload = function () {\n    test()\n    forkMe('https://github.com/davidfig/tree')\n}", "import Events from 'eventemitter3'\nimport clicked from 'clicked'\n\nimport { Input } from './input'\nimport { defaults, styleDefaults } from './defaults'\nimport * as utils from './utils'\nimport { icons } from './icons'\n\nexport class Tree extends Events {\n    /**\n     * Create Tree\n     * @param {TreeData} tree - data for tree (see readme for description)\n     * @param {object} [options]\n     * @param {(HTMLElement|string)} [options.element] if a string then document.querySelector(element); if empty, it creates an element\n     * @param {(HTMLElement|string)} [options.parent] appends the element to this parent (if string then document.querySelector(parent))\n     * @param {boolean} [options.move=true] drag tree to rearrange\n     * @param {boolean} [options.select=true] click to select node (if false then nodes are not selected and tree.selection is always null)\n     * @param {number} [options.indentation=20] number of pixels to indent for each level\n     * @param {number} [options.threshold=10] number of pixels to move to start a drag\n     * @param {number} [options.holdTime=2000] number of milliseconds to press and hold name before editing starts (set to 0 to disable)\n     * @param {boolean} [options.expandOnClick=true] expand and collapse node on click without drag except (will select before expanding if select=true)\n     * @param {number} [options.dragOpacity=0.75] opacity setting for dragged item\n     * @param {string} [options.classBaseName=yy-tree] first part of className for all DOM objects (e.g., yy-tree, yy-tree-indicator)\n     * @param {boolean} [options.addStyles=true] attaches a style sheet with default and overridden styles; set to false to use your own stylesheet\n     * @param {object} [styles]\n     * @param {string[]} [styles.nameStyles] use these to override individual styles for the name (will be included in the attached stylesheet)\n     * @param {string[]} [styles.contentStyles] use these to override individual styles for the content (will be included in the attached stylesheet)\n     * @param {string[]} [styles.indicatorStyles] use these to override individual styles for the move-line indicator (will be included in the attached stylesheet)\n     * @param {string[]} [styles.selectedStyles] use these to override individual styles for the selected item (will be included in the attached stylesheet)\n     * @fires render\n     * @fires clicked\n     * @fires expand\n     * @fires collapse\n     * @fires name-change\n     * @fires move\n     * @fires move-pending\n     * @fires update\n     */\n    constructor(tree, options, styles) {\n        super()\n        this._options = utils.options(options, defaults)\n        this._input = new Input(this)\n        if (typeof this._options.element === 'undefined') {\n            /**\n             * Main div holding tree\n             * @type {HTMLElement}\n             */\n            this.element = document.createElement('div')\n        } else {\n            this.element = utils.el(this._options.element)\n        }\n        if (this._options.parent) {\n            utils.el(this._options.parent).appendChild(this.element)\n        }\n        this.element.classList.add(this.classBaseName)\n        this.element.data = tree\n        if (this._options.addStyles !== false) {\n            this._addStyles(styles)\n        }\n        this.update()\n    }\n\n    /**\n     * Selected data\n     * @type {*}\n     */\n    get selection() {\n        return this._selection.data\n    }\n    set selection(data) {\n    }\n\n    /**\n     * className's prefix (e.g., \"yy-tree\"-content)\n     * @type {string}\n     */\n    get classBaseName() {\n        return this._options.classBaseName\n    }\n    set classBaseName(value) {\n        if (value !== this._options.classBaseName) {\n            this._options.classBaseName = value\n            this.update()\n        }\n    }\n\n    /**\n     * indentation for tree\n     * @type {number}\n     */\n    get indentation() {\n        return this._options.indentation\n    }\n    set indentation(value) {\n        if (value !== this._options.indentation) {\n            this._options.indentation = value\n            this._input._indicatorMarginLeft = value + 'px'\n            this.update()\n        }\n    }\n\n    /**\n     * number of milliseconds to press and hold name before editing starts (set to 0 to disable)\n     * @type {number}\n     */\n    get holdTime() {\n        return this._options.holdTime\n    }\n    set holdTime(value) {\n        if (value !== this._options.holdTime) {\n            this._options.holdTime = value\n        }\n    }\n\n    /**\n     * whether tree may be rearranged\n     * @type {boolean}\n     */\n    get move() {\n        return this._options.move\n    }\n    set move(value) {\n        this._options.move = value\n    }\n\n    /**\n     * expand and collapse node on click without drag except (will select before expanding if select=true)\n     * @type {boolean}\n     */\n    get expandOnClick() {\n        return this._options.expandOnClick\n    }\n    set expandOnClick(value) {\n        this._options.expandOnClick = value\n    }\n\n    /**\n     * click to select node (if false then nodes are not selected and tree.selection is always null)\n     * @type {boolean}\n     */\n    get select() {\n        return this._options.select\n    }\n    set select(value) {\n        this._options.select = value\n    }\n\n    /**\n     * opacity setting for dragged item\n     * @type {number}\n     */\n    get dragOpacity() {\n        return this._options.dragOpacity\n    }\n    set dragOpacity(value) {\n        this._options.dragOpacity = value\n    }\n\n    _leaf(data, level) {\n        const leaf = utils.html({ className: `${this.classBaseName}-leaf` })\n        leaf.isLeaf = true\n        leaf.data = data\n        leaf.content = utils.html({ parent: leaf, className: `${this.classBaseName}-content` })\n        leaf.style.marginLeft = this.indentation + 'px'\n        leaf.icon = utils.html({\n            parent: leaf.content,\n            html: data.expanded ? icons.open : icons.closed,\n            className: `${this.classBaseName}-expand`\n        })\n        leaf.name = utils.html({ parent: leaf.content, html: data.name, className: `${this.classBaseName}-name` })\n        leaf.name.addEventListener('mousedown', e => this._input._down(e))\n        leaf.name.addEventListener('touchstart', e => this._input._down(e))\n        for (let child of data.children) {\n            const add = this._leaf(child, level + 1)\n            add.data.parent = data\n            leaf.appendChild(add)\n            if (!data.expanded) {\n                add.style.display = 'none'\n            }\n        }\n        if (this._getChildren(leaf, true).length === 0) {\n            this._hideIcon(leaf)\n        }\n        clicked(leaf.icon, () => this.toggleExpand(leaf))\n        this.emit('render', leaf, this)\n        return leaf\n    }\n\n    _getChildren(leaf, all) {\n        leaf = leaf || this.element\n        const children = []\n        for (let child of leaf.children) {\n            if (child.isLeaf && (all || child.style.display !== 'none')) {\n                children.push(child)\n            }\n        }\n        return children\n    }\n\n    _hideIcon(leaf) {\n        if (leaf.isLeaf) {\n            leaf.icon.style.opacity = 0\n            leaf.icon.style.cursor = 'unset'\n        }\n    }\n\n    _showIcon(leaf) {\n        if (leaf.isLeaf) {\n            leaf.icon.style.opacity = 1\n            leaf.icon.style.cursor = this._options.cursorExpand\n        }\n    }\n\n    /** Expands all leaves */\n    expandAll() {\n        this._expandChildren(this.element)\n    }\n\n    _expandChildren(leaf) {\n        for (let child of this._getChildren(leaf, true)) {\n            this.expand(child)\n            this._expandChildren(child)\n        }\n    }\n\n    /** Collapses all leaves */\n    collapseAll() {\n        this._collapseChildren(this)\n    }\n\n    _collapseChildren(leaf) {\n        for (let child of this._getChildren(leaf, true)) {\n            this.collapse(child)\n            this._collapseChildren(child)\n        }\n    }\n\n    /**\n     * Toggles a leaf\n     * @param {HTMLElement} leaf\n     */\n    toggleExpand(leaf) {\n        if (leaf.icon.style.opacity !== '0') {\n            if (leaf.data.expanded) {\n                this.collapse(leaf)\n            } else {\n                this.expand(leaf)\n            }\n        }\n    }\n\n    /**\n     * Expands a leaf\n     * @param {HTMLElement} leaf\n     */\n    expand(leaf) {\n        if (leaf.isLeaf) {\n            const children = this._getChildren(leaf, true)\n            if (children.length) {\n                for (let child of children) {\n                    child.style.display = 'block'\n                }\n                leaf.data.expanded = true\n                leaf.icon.innerHTML = icons.open\n                this.emit('expand', leaf, this)\n                this.emit('update', leaf, this)\n            }\n        }\n    }\n\n    /**\n     * Collapses a leaf\n     * @param {HTMLElement} leaf\n     */\n    collapse(leaf) {\n        if (leaf.isLeaf) {\n            const children = this._getChildren(leaf, true)\n            if (children.length) {\n                for (let child of children) {\n                    child.style.display = 'none'\n                }\n                leaf.data.expanded = false\n                leaf.icon.innerHTML = icons.closed\n                this.emit('collapse', leaf, this)\n                this.emit('update', leaf, this)\n            }\n        }\n    }\n\n    /** call this after tree's data has been updated outside of this library */\n    update() {\n        const scroll = this.element.scrollTop\n        utils.removeChildren(this.element)\n        for (let leaf of this.element.data.children) {\n            const add = this._leaf(leaf, 0)\n            add.data.parent = this.element.data\n            this.element.appendChild(add)\n        }\n        this.element.scrollTop = scroll + 'px'\n    }\n\n    /**\n     * edit the name entry using the data\n     * @param {object} data element of leaf\n     */\n    editData(data) {\n        const children = this._getChildren(null, true)\n        for (let child of children) {\n            if (child.data === data) {\n                this.edit(child)\n            }\n        }\n    }\n\n    /**\n     * edit the name entry using the created element\n     * @param {HTMLElement} leaf\n     */\n    edit(leaf) {\n        this._editing = leaf\n        this._editInput = utils.html({ parent: this._editing.name.parentNode, type: 'input', className: `${this.classBaseName}-name` })\n        const computed = window.getComputedStyle(this._editing.name)\n        this._editInput.style.boxSizing = 'content-box'\n        this._editInput.style.fontFamily = computed.getPropertyValue('font-family')\n        this._editInput.style.fontSize = computed.getPropertyValue('font-size')\n        this._editInput.value = this._editing.name.innerText\n        this._editInput.setSelectionRange(0, this._editInput.value.length)\n        this._editInput.focus()\n        this._editInput.addEventListener('update', () => {\n            this.nameChange(this._editing, this._editInput.value)\n            this._holdClose()\n        })\n        this._editInput.addEventListener('keyup', (e) => {\n            if (e.code === 'Escape') {\n                this._holdClose()\n            }\n            if (e.code === 'Enter') {\n                this.nameChange(this._editing, this._editInput.value)\n                this._holdClose()\n            }\n        })\n        this._editing.name.style.display = 'none'\n        this._target = null\n    }\n\n    _holdClose() {\n        if (this._editing) {\n            this._editInput.remove()\n            this._editing.name.style.display = 'block'\n            this._editing = this._editInput = null\n        }\n    }\n\n    /**\n     * change the name of a leaf\n     * @param {HTMLElement} leaf\n     * @param {string} name\n     */\n    nameChange(leaf, name) {\n        leaf.data.name = this._input.value\n        leaf.name.innerHTML = name\n        this.emit('name-change', leaf, this._input.value, this)\n        this.emit('update', leaf, this)\n    }\n\n    /**\n     * Find a leaf based using its data\n     * @param {object} leaf\n     * @param {HTMLElement} [root=this.element]\n     */\n    getLeaf(leaf, root = this.element) {\n        this.findInTree(root, data => data === leaf)\n    }\n\n    /**\n     * call the callback function on each node; returns the node if callback === true\n     * @param {*} leaf data\n     * @param {function} callback\n     */\n    findInTree(leaf, callback) {\n        for (const child of leaf.children) {\n            if (callback(child)) {\n                return child\n            }\n            const find = this.findInTree(child, callback)\n            if (find) {\n                return find\n            }\n        }\n    }\n\n    _getFirstChild(element, all) {\n        const children = this._getChildren(element, all)\n        if (children.length) {\n            return children[0]\n        }\n    }\n\n    _getLastChild(element, all) {\n        const children = this._getChildren(element, all)\n        if (children.length) {\n            return children[children.length - 1]\n        }\n    }\n\n    _getParent(element) {\n        element = element.parentNode\n        while (element.style.display === 'none') {\n            element = element.parentNode\n        }\n        return element\n    }\n\n    _addStyles(userStyles) {\n        const styles = utils.options(userStyles, styleDefaults)\n        let s = `.${this.classBaseName}-name{`\n        for (const key in styles.nameStyles) {\n            s += `${key}:${styles.nameStyles[key]};`\n        }\n        s += `}.${this.classBaseName}-content{`\n        for (const key in styles.contentStyles) {\n            s += `${key}:${styles.contentStyles[key]};`\n        }\n        s += `}.${this.classBaseName}-indicator{`\n        for (const key in styles.indicatorStyles) {\n            s += `${key}:${styles.indicatorStyles[key]};`\n        }\n        s += `}.${this.classBaseName}-expand{`\n        for (const key in styles.expandStyles) {\n            s += `${key}:${styles.expandStyles[key]};`\n        }\n        s += `}.${this.classBaseName}-select{`\n        for (const key in styles.selectStyles) {\n            s += `${key}:${styles.selectStyles[key]};`\n        }\n        s + '}'\n        const style = document.createElement('style')\n        style.innerHTML = s\n        document.head.appendChild(style)\n    }\n}\n\n/**\n * @typedef {Object} Tree~TreeData\n * @property {TreeData[]} children\n * @property {string} name\n * @property {parent} [parent] if not provided then will traverse tree to find parent\n */\n\n/**\n  * trigger when expand is called either through UI interaction or Tree.expand()\n  * @event Tree~expand\n  * @type {object}\n  * @property {HTMLElement} tree element\n  * @property {Tree} Tree\n  */\n\n/**\n  * trigger when collapse is called either through UI interaction or Tree.expand()\n  * @event Tree~collapse\n  * @type {object}\n  * @property {HTMLElement} tree element\n  * @property {Tree} Tree\n  */\n\n/**\n  * trigger when name is change either through UI interaction or Tree.nameChange()\n  * @event Tree~name-change\n  * @type {object}\n  * @property {HTMLElement} tree element\n  * @property {string} name\n  * @property {Tree} Tree\n  */\n\n/**\n  * trigger when a leaf is picked up through UI interaction\n  * @event Tree~move-pending\n  * @type {object}\n  * @property {HTMLElement} tree element\n  * @property {Tree} Tree\n  */\n\n/**\n  * trigger when a leaf's location is changed\n  * @event Tree~move\n  * @type {object}\n  * @property {HTMLElement} tree element\n  * @property {Tree} Tree\n  */\n\n/**\n  * trigger when a leaf is clicked and not dragged or held\n  * @event Tree~clicked\n  * @type {object}\n  * @property {HTMLElement} tree element\n  * @property {UIEvent} event\n  * @property {Tree} Tree\n  */\n\n/**\n  * trigger when a leaf is changed (i.e., moved, name-change)\n  * @event Tree~update\n  * @type {object}\n  * @property {HTMLElement} tree element\n  * @property {Tree} Tree\n  */\n\n/**\n  * trigger when a leaf's div is created\n  * @event Tree~render\n  * @type {object}\n  * @property {HTMLElement} tree element\n  * @property {Tree} Tree\n  */", "/**\n * converts a string to an HTMLElement if necessary\n * @param {(HTMLElement|string)} element\n */\nexport function el(element) {\n    if (typeof element === 'string') {\n        return document.querySelector(element)\n    }\n    return element\n\n}\n\n/**\n * measure distance between two points\n * @param {number} x1\n * @param {number} y1\n * @param {number} x2\n * @param {number} y2\n */\nexport function distance(x1, y1, x2, y2) {\n    return Math.sqrt(Math.pow(x1 - x2, 2) + Math.pow(y1 - y2, 2))\n}\n\n/**\n * find shortest distance from point to HTMLElement's bounding box\n * from: https://gamedev.stackexchange.com/questions/44483/how-do-i-calculate-distance-between-a-point-and-an-axis-aligned-rectangle\n * @param {number} x\n * @param {number} y\n * @param {HTMLElement} element\n */\nexport function distancePointElement(px, py, element) {\n    const pos = toGlobal(element)\n    const width = element.offsetWidth\n    const height = element.offsetHeight\n    const x = pos.x + width / 2\n    const y = pos.y + height / 2\n    const dx = Math.max(Math.abs(px - x) - width / 2, 0)\n    const dy = Math.max(Math.abs(py - y) - height / 2, 0)\n    return dx * dx + dy * dy\n}\n\n/**\n * determine whether the mouse is inside an element\n * @param {HTMLElement} dragging\n * @param {HTMLElement} element\n */\nexport function inside(x, y, element) {\n    const pos = toGlobal(element)\n    const x1 = pos.x\n    const y1 = pos.y\n    const w1 = element.offsetWidth\n    const h1 = element.offsetHeight\n    return x >= x1 && x <= x1 + w1 && y >= y1 && y <= y1 + h1\n}\n\n/**\n * determines global location of a div\n * from https://stackoverflow.com/a/26230989/1955997\n * @param {HTMLElement} e\n * @returns {PointLike}\n */\nexport function toGlobal(e) {\n    const box = e.getBoundingClientRect()\n\n    const body = document.body\n    const docEl = document.documentElement\n\n    const scrollTop = window.pageYOffset || docEl.scrollTop || body.scrollTop\n    const scrollLeft = window.pageXOffset || docEl.scrollLeft || body.scrollLeft\n\n    const clientTop = docEl.clientTop || body.clientTop || 0\n    const clientLeft = docEl.clientLeft || body.clientLeft || 0\n\n    const top = box.top + scrollTop - clientTop\n    const left = box.left + scrollLeft - clientLeft\n\n    return { y: Math.round(top), x: Math.round(left) }\n}\n\n/**\n * @typedef {object} PointLike\n * @property {number} x\n * @property {number} y\n */\n\n/**\n * combines options and default options\n * @param {object} options\n * @param {object} defaults\n * @returns {object} options+defaults\n */\nexport function options(options, defaults) {\n    options = options || {}\n    for (let option in defaults) {\n        options[option] = typeof options[option] !== 'undefined' ? options[option] : defaults[option]\n    }\n    return options\n}\n\n/**\n * set a style on an element\n * @param {HTMLElement} element\n * @param {string} style\n * @param {(string|string[])} value - single value or list of possible values (test each one in order to see if it works)\n */\nexport function style(element, style, value) {\n    if (Array.isArray(value)) {\n        for (let entry of value) {\n            element.style[style] = entry\n            if (element.style[style] === entry) {\n                break\n            }\n        }\n    } else {\n        element.style[style] = value\n    }\n}\n\n/**\n * calculate percentage of overlap between two boxes\n * from https://stackoverflow.com/a/21220004/1955997\n * @param {number} xa1\n * @param {number} ya1\n * @param {number} xa2\n * @param {number} xa2\n * @param {number} xb1\n * @param {number} yb1\n * @param {number} xb2\n * @param {number} yb2\n */\nexport function percentage(xa1, ya1, xa2, ya2, xb1, yb1, xb2, yb2) {\n    const sa = (xa2 - xa1) * (ya2 - ya1)\n    const sb = (xb2 - xb1) * (yb2 - yb1)\n    const si = Math.max(0, Math.min(xa2, xb2) - Math.max(xa1, xb1)) * Math.max(0, Math.min(ya2, yb2) - Math.max(ya1, yb1))\n    const union = sa + sb - si\n    if (union !== 0) {\n        return si / union\n    } else {\n        return 0\n    }\n}\n\nexport function removeChildren(element) {\n    while (element.firstChild) {\n        element.firstChild.remove()\n    }\n}\n\nexport function html(options) {\n    options = options || {}\n    const object = document.createElement(options.type || 'div')\n    if (options.parent) {\n        options.parent.appendChild(object)\n    }\n    if (options.className) {\n        object.classList.add(options.className)\n    }\n    if (options.html) {\n        object.innerHTML = options.html\n    }\n    if (options.id) {\n        object.id = options.id\n    }\n    return object\n}\n\nexport function getChildIndex(parent, child) {\n    let index = 0\n    for (let entry of parent.children) {\n        if (entry === child) {\n            return index\n        }\n        index++\n    }\n    return -1\n}\n\nexport function attachStyles(styles) {\n    const s = document.createElement('style')\n    s.innerHTML = styles\n    document.head.appendChild(s)\n}", "import * as utils from './utils'\r\n\r\nexport class Indicator {\r\n    constructor(tree) {\r\n        this._indicator = utils.html()\r\n        this._indicator.style.marginLeft = tree.indentation + 'px'\r\n        const content = utils.html({ parent: this._indicator })\r\n        content.style.display = 'flex'\r\n        this._indicator.indentation = utils.html({ parent: content })\r\n        this._indicator.icon = utils.html({ parent: content, className: `${tree.classBaseName}-expand` })\r\n        this._indicator.icon.style.height = 0\r\n        this._indicator.line = utils.html({ parent: content, className: `${tree.classBaseName}-indicator` })\r\n    }\r\n\r\n    get() {\r\n        return this._indicator\r\n    }\r\n\r\n    set _marginLeft(value) {\r\n        this._indicator.style.marginLeft = value + 'px'\r\n    }\r\n}", "import * as utils from './utils'\r\nimport { Indicator } from './indicator'\r\n\r\nexport class Input {\r\n    constructor(tree) {\r\n        this._tree = tree\r\n        this._indicator = new Indicator(tree)\r\n        document.body.addEventListener('mousemove', e => this._move(e))\r\n        document.body.addEventListener('touchmove', e => this._move(e))\r\n        document.body.addEventListener('mouseup', e => this._up(e))\r\n        document.body.addEventListener('touchend', e => this._up(e))\r\n        document.body.addEventListener('mouseleave', e => this._up(e))\r\n    }\r\n\r\n    _down(e) {\r\n        this._target = e.currentTarget.parentNode.parentNode\r\n        let alreadySelected = false\r\n        if (this._tree._selection === this._target) {\r\n            alreadySelected = true\r\n        } else {\r\n            if (this._tree._selection) {\r\n                this._tree._selection.name.classList.remove(`${this._tree.classBaseName}-select`)\r\n            }\r\n            this._tree._selection = this._target\r\n            this._tree._selection.name.classList.add(`${this._tree.classBaseName}-select`)\r\n        }\r\n        this._isDown = { x: e.pageX, y: e.pageY, alreadySelected }\r\n        const pos = utils.toGlobal(this._target)\r\n        this._offset = { x: e.pageX - pos.x, y: e.pageY - pos.y }\r\n        if (this._tree.holdTime) {\r\n            this._holdTimeout = window.setTimeout(() => this._hold(), this._tree.holdTime)\r\n        }\r\n        e.preventDefault()\r\n        e.stopPropagation()\r\n    }\r\n\r\n    _hold() {\r\n        this._holdTimeout = null\r\n        this._tree.edit(this._target)\r\n    }\r\n\r\n    _checkThreshold(e) {\r\n        if (!this._tree.move) {\r\n            return false\r\n        } else if (this._moving) {\r\n            return true\r\n        } else {\r\n            if (utils.distance(this._isDown.x, this._isDown.y, e.pageX, e.pageY)) {\r\n                this._moving = true\r\n                this._pickup()\r\n                return true\r\n            } else {\r\n                return false\r\n            }\r\n        }\r\n    }\r\n\r\n    _pickup() {\r\n        if (this._holdTimeout) {\r\n            window.clearTimeout(this._holdTimeout)\r\n            this._holdTimeout = null\r\n        }\r\n        this._tree.emit('move-pending', this._target, this._tree)\r\n        const parent = this._target.parentNode\r\n        parent.insertBefore(this._indicator.get(), this._target)\r\n        const pos = utils.toGlobal(this._target)\r\n        document.body.appendChild(this._target)\r\n        this._old = {\r\n            opacity: this._target.style.opacity || 'unset',\r\n            position: this._target.style.position || 'unset',\r\n            boxShadow: this._target.name.style.boxShadow || 'unset'\r\n        }\r\n        this._target.style.position = 'absolute'\r\n        this._target.name.style.boxShadow = '3px 3px 5px rgba(0,0,0,0.25)'\r\n        this._target.style.left = pos.x + 'px'\r\n        this._target.style.top = pos.y + 'px'\r\n        this._target.style.opacity = this._tree.dragOpacity\r\n        if (this._tree._getChildren(parent, true).length === 0) {\r\n            this._tree._hideIcon(parent)\r\n        }\r\n    }\r\n\r\n    _findClosest(e, entry) {\r\n        const pos = utils.toGlobal(entry.name)\r\n        if (pos.y + entry.name.offsetHeight / 2 <= e.pageY) {\r\n            if (!this._closest.foundAbove) {\r\n                if (utils.inside(e.pageX, e.pageY, entry.name)) {\r\n                    this._closest.foundAbove = true\r\n                    this._closest.above = entry\r\n                } else {\r\n                    const distance = utils.distancePointElement(e.pageX, e.pageY, entry.name)\r\n                    if (distance < this._closest.distanceAbove) {\r\n                        this._closest.distanceAbove = distance\r\n                        this._closest.above = entry\r\n                    }\r\n                }\r\n            }\r\n        } else if (!this._closest.foundBelow) {\r\n            if (utils.inside(e.pageX, e.pageY, entry.name)) {\r\n                this._closest.foundBelow = true\r\n                this._closest.below = entry\r\n            } else {\r\n                const distance = utils.distancePointElement(e.pageX, e.pageY, entry.name)\r\n                if (distance < this._closest.distanceBelow) {\r\n                    this._closest.distanceBelow = distance\r\n                    this._closest.below = entry\r\n                }\r\n            }\r\n        }\r\n        for (let child of this._tree._getChildren(entry)) {\r\n            this._findClosest(e, child)\r\n        }\r\n    }\r\n\r\n    _move(e) {\r\n        if (this._target && this._checkThreshold(e)) {\r\n            const element = this._tree.element\r\n            const indicator = this._indicator.get()\r\n            const indentation = this._tree.indentation\r\n            indicator.remove()\r\n            this._target.style.left = e.pageX - this._offset.x + 'px'\r\n            this._target.style.top = e.pageY - this._offset.y + 'px'\r\n            const x = utils.toGlobal(this._target.name).x\r\n            this._closest = { distanceAbove: Infinity, distanceBelow: Infinity }\r\n            for (let child of this._tree._getChildren()) {\r\n                this._findClosest(e, child)\r\n            }\r\n            if (!this._closest.above && !this._closest.below) {\r\n                element.appendChild(indicator)\r\n            } else if (!this._closest.above)  {\r\n                // null [] leaf\r\n                element.insertBefore(indicator, this._tree._getFirstChild(element))\r\n            } else if (!this._closest.below) {\r\n                // leaf [] null\r\n                let pos = utils.toGlobal(this._closest.above.name)\r\n                if (x > pos.x + indentation) {\r\n                    this._closest.above.insertBefore(indicator, this._tree._getFirstChild(this._closest.above, true))\r\n                } else if (x > pos.x - indentation) {\r\n                    this._closest.above.parentNode.appendChild(indicator)\r\n                } else {\r\n                    let parent = this._closest.above\r\n                    while (parent !== element && x < pos.x) {\r\n                        parent = this._tree._getParent(parent)\r\n                        if (parent !== element) {\r\n                            pos = utils.toGlobal(parent.name)\r\n                        }\r\n                    }\r\n                    parent.appendChild(indicator)\r\n                }\r\n            } else if (this._closest.below.parentNode === this._closest.above) {\r\n                // parent [] child\r\n                this._closest.above.insertBefore(indicator, this._closest.below)\r\n            } else if (this._closest.below.parentNode === this._closest.above.parentNode) {\r\n                // sibling [] sibling\r\n                const pos = utils.toGlobal(this._closest.above.name)\r\n                if (x > pos.x + indentation) {\r\n                    this._closest.above.insertBefore(indicator, this._tree._getLastChild(this._closest.above, true))\r\n                } else {\r\n                    this._closest.above.parentNode.insertBefore(indicator, this._closest.below)\r\n                }\r\n            } else {\r\n                // child [] parent^\r\n                let pos = utils.toGlobal(this._closest.above.name)\r\n                if (x > pos.x + indentation) {\r\n                    this._closest.above.insertBefore(indicator, this._tree._getLastChild(this._closest.above, true))\r\n                } else if (x > pos.x - indentation) {\r\n                    this._closest.above.parentNode.appendChild(indicator)\r\n                } else if (x < utils.toGlobal(this._closest.below.name).x) {\r\n                    this._closest.below.parentNode.insertBefore(indicator, this._closest.below)\r\n                } else {\r\n                    let parent = this._closest.above\r\n                    while (parent.parentNode !== this._closest.below.parentNode && x < pos.x) {\r\n                        parent = this._tree._getParent(parent)\r\n                        pos = utils.toGlobal(parent.name)\r\n                    }\r\n                    parent.appendChild(indicator)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    _up(e) {\r\n        if (this._target) {\r\n            if (!this._moving) {\r\n                if (this._tree.expandOnClick && (!this._tree.select || this._isDown.alreadySelected)) {\r\n                    this._tree.toggleExpand(this._target)\r\n                }\r\n                this._tree.emit('clicked', this._target, e, this._tree)\r\n            } else {\r\n                const indicator = this._indicator.get()\r\n                indicator.parentNode.insertBefore(this._target, indicator)\r\n                this._tree.expand(indicator.parentNode)\r\n                this._tree._showIcon(indicator.parentNode)\r\n                this._target.style.position = this._old.position === 'unset' ? '' : this._old.position\r\n                this._target.name.style.boxShadow = this._old.boxShadow === 'unset' ? '' : this._old.boxShadow\r\n                this._target.style.opacity = this._old.opacity === 'unset' ? '' : this._old.opacity\r\n                indicator.remove()\r\n                this._moveData()\r\n                this._tree.emit('move', this._target, this._tree)\r\n                this._tree.emit('update', this._target, this._tree)\r\n            }\r\n            if (this._holdTimeout) {\r\n                window.clearTimeout(this._holdTimeout)\r\n                this._holdTimeout = null\r\n            }\r\n            this._target = this._moving = null\r\n        }\r\n    }\r\n\r\n    _moveData() {\r\n        this._target.data.parent.children.splice(this._target.data.parent.children.indexOf(this._target.data), 1)\r\n        this._target.parentNode.data.children.splice(utils.getChildIndex(this._target.parentNode, this._target), 0, this._target.data)\r\n        this._target.data.parent = this._target.parentNode.data\r\n    }\r\n\r\n    _indicatorMarginLeft(value) {\r\n        this._indicator.marginLeft = value\r\n    }\r\n}", "export const defaults = {\n    move: true,\n    select: true,\n    indentation: 20,\n    threshold: 10,\n    holdTime: 1000,\n    expandOnClick: true,\n    dragOpacity: 0.75,\n    classBaseName: 'yy-tree',\n    cursorName: 'grab -webkit-grab pointer',\n    cursorExpand: 'pointer'\n}\n\nexport const styleDefaults = {\n    nameStyles: {\n        padding: '0.5em 1em',\n        margin: '0.1em',\n        background: 'rgb(230,230,230)',\n        'user-select': 'none',\n        cursor: 'pointer',\n        width: '100px',\n    },\n    indicatorStyles: {\n        background: 'rgb(150,150,255)',\n        height: '5px',\n        width: '100px',\n        padding: '0 1em',\n    },\n    contentStyles: {\n        display: 'flex',\n        'align-items': 'center',\n    },\n    expandStyles: {\n        width: '15px',\n        height: '15px',\n        // cursor: 'pointer',\n    },\n    selectStyles: {\n        background: 'rgb(200, 200, 200)',\n    },\n}", "export const icons={closed:'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"><svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\"><rect id=\"closed\" x=\"0\" y=\"0\" width=\"100\" height=\"100\" style=\"fill:none;\"/><rect x=\"10\" y=\"10\" width=\"80\" height=\"80\" style=\"fill:none;stroke:#000;stroke-width:2px;\"/><path d=\"M25,50l50,0\" style=\"fill:none;stroke:#000;stroke-width:2px;\"/><path d=\"M50,75l0,-50\" style=\"fill:none;stroke:#000;stroke-width:2px;\"/></svg>',open:'<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"><svg width=\"100%\" height=\"100%\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" xmlns:serif=\"http://www.serif.com/\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:round;stroke-linejoin:round;stroke-miterlimit:1.5;\"><rect id=\"open\" x=\"0\" y=\"0\" width=\"100\" height=\"100\" style=\"fill:none;\"/><rect x=\"10\" y=\"10\" width=\"80\" height=\"80\" style=\"fill:none;stroke:#000;stroke-width:2px;\"/><path d=\"M25,50l50,0\" style=\"fill:none;stroke:#000;stroke-width:2px;\"/></svg>'}"],
  "mappings": "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",
  "names": []
}
